<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="make" name="umldraw">
	<property name="project.root" value="../.."/>
	<property name="lib" value="${project.root}/lib"/>

	<taskdef name="js"
		classname="org.kotemaru.ant.task.JsTask"
		classpath="${lib}/jstask.jar;${lib}/js.jar"
	/>
	<target name="make" depends="make.jsloaders" >
		<copy file="editor.html.template" tofile="editor.html" 
			filtering="true" overwrite="yes" encoding="utf-8">
			<filterset>
				<filter token="jsloaders" value="${jsloaders}" />
			</filterset>
		</copy>

	</target>

	<target name="make.jsloaders">
		<js>
			<fileset dir="js" includes="**/*.js" />
			<param name="prefix" value="^${basedir}/" />
			
			<![CDATA[
			var PRIORITY = [
				"Lang.js",
				"Coor.js",	"CoorDiag.js", 
				"Font.js", "Color.js",

				"Elem.js", "Item.js",
				"Items.js",	"Handle.js",
				"Rectangle.js",
				"Group.js",	"SelectGroup.js",
			
				"Action.js",
				"*",
				"Editor.js"
			];
			var PRI = {};
			for (var i=0;i<PRIORITY.length;i++) {
				PRI[PRIORITY[i]] = i;
			}
			
			var names = [];
			var ite = fileset.iterator();
			while (ite.hasNext()) {
				var reg = new RegExp(prefix);
				var fname = (""+ite.next()).replace(reg,"");
				var pri = PRI[fname.match(/[^/]*$/)];
				if (pri == null) pri = PRI["*"];
				names.push({pri:pri, fname:fname});
			}
			names.sort(function(a,b){
				if (a.pri != b.pri) return a.pri-b.pri;
				return a.fname>b.fname?1:-1;
			});
			var jsloaders = "";
			for (var i=0;i<names.length;i++) {
				task.log(names[i].pri+":"+names[i].fname);
				jsloaders += "<script src='"+names[i].fname+"'></script>\n";
			}
			task.project.setProperty("jsloaders",jsloaders);
			]]>
		</js>
		<echo>${jsloaders}</echo>
	</target>	

</project>
